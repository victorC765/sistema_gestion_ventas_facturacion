-- MySQL Script generated by MySQL Workbench
-- Sun Apr 28 21:26:00 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema gestion-ventas
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `gestion-ventas` ;

-- -----------------------------------------------------
-- Schema gestion-ventas
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `gestion-ventas` DEFAULT CHARACTER SET utf8 ;
USE `gestion-ventas` ;

-- -----------------------------------------------------
-- Table `gestion-ventas`.`productos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gestion-ventas`.`productos` ;

CREATE TABLE IF NOT EXISTS `gestion-ventas`.`productos` (
  `id-productos` INT NOT NULL AUTO_INCREMENT,
  `productos` VARCHAR(45) NULL,
  `descripcion` VARCHAR(45) NULL,
  `precio` VARCHAR(45) NULL,
  `serial` VARCHAR(20) NULL,
  PRIMARY KEY (`id-productos`),
  UNIQUE INDEX `serial_UNIQUE` (`serial` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gestion-ventas`.`genero`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gestion-ventas`.`genero` ;

CREATE TABLE IF NOT EXISTS `gestion-ventas`.`genero` (
  `id-genero` INT NOT NULL AUTO_INCREMENT,
  `genero` VARCHAR(45) NULL,
  PRIMARY KEY (`id-genero`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gestion-ventas`.`personas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gestion-ventas`.`personas` ;

CREATE TABLE IF NOT EXISTS `gestion-ventas`.`personas` (
  `id-personas` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `apellido` VARCHAR(45) NULL,
  `cedula` VARCHAR(45) NULL,
  `telefono` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `direcci√≥n` VARCHAR(45) NULL,
  `genero_id-genero` INT NOT NULL,
  PRIMARY KEY (`id-personas`),
  INDEX `fk_personas_genero_idx` (`genero_id-genero` ASC) ,
  CONSTRAINT `fk_personas_genero`
    FOREIGN KEY (`genero_id-genero`)
    REFERENCES `gestion-ventas`.`genero` (`id-genero`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gestion-ventas`.`clientes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gestion-ventas`.`clientes` ;

CREATE TABLE IF NOT EXISTS `gestion-ventas`.`clientes` (
  `id-clientes` INT NOT NULL,
  `personas_id-personas` INT NOT NULL,
  PRIMARY KEY (`id-clientes`),
  INDEX `fk_clientes_personas1_idx` (`personas_id-personas` ASC) ,
  CONSTRAINT `fk_clientes_personas1`
    FOREIGN KEY (`personas_id-personas`)
    REFERENCES `gestion-ventas`.`personas` (`id-personas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gestion-ventas`.`Vendedores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gestion-ventas`.`Vendedores` ;

CREATE TABLE IF NOT EXISTS `gestion-ventas`.`Vendedores` (
  `id-Vendedores` INT NOT NULL,
  `user-name` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  `personas_id-personas` INT NOT NULL,
  PRIMARY KEY (`id-Vendedores`),
  INDEX `fk_Vendedores_personas1_idx` (`personas_id-personas` ASC) ,
  CONSTRAINT `fk_Vendedores_personas1`
    FOREIGN KEY (`personas_id-personas`)
    REFERENCES `gestion-ventas`.`personas` (`id-personas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gestion-ventas`.`tipo-pagos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gestion-ventas`.`tipo-pagos` ;

CREATE TABLE IF NOT EXISTS `gestion-ventas`.`tipo-pagos` (
  `id-tipo-pagos` INT NOT NULL,
  `tipo-pago` VARCHAR(45) NULL,
  PRIMARY KEY (`id-tipo-pagos`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gestion-ventas`.`Ventas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gestion-ventas`.`Ventas` ;

CREATE TABLE IF NOT EXISTS `gestion-ventas`.`Ventas` (
  `id-Ventas` INT NOT NULL AUTO_INCREMENT,
  `fecha-hora` DATETIME NULL,
  `clientes_id-clientes` INT NOT NULL,
  `tipo-pagos_id-tipo-pagos` INT NOT NULL,
  `Vendedores_id-Vendedores` INT NOT NULL,
  PRIMARY KEY (`id-Ventas`),
  INDEX `fk_Ventas_clientes1_idx` (`clientes_id-clientes` ASC) ,
  INDEX `fk_Ventas_tipo-pagos1_idx` (`tipo-pagos_id-tipo-pagos` ASC) ,
  INDEX `fk_Ventas_Vendedores1_idx` (`Vendedores_id-Vendedores` ASC) ,
  CONSTRAINT `fk_Ventas_clientes1`
    FOREIGN KEY (`clientes_id-clientes`)
    REFERENCES `gestion-ventas`.`clientes` (`id-clientes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Ventas_tipo-pagos1`
    FOREIGN KEY (`tipo-pagos_id-tipo-pagos`)
    REFERENCES `gestion-ventas`.`tipo-pagos` (`id-tipo-pagos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Ventas_Vendedores1`
    FOREIGN KEY (`Vendedores_id-Vendedores`)
    REFERENCES `gestion-ventas`.`Vendedores` (`id-Vendedores`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gestion-ventas`.`comprobante-pago`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gestion-ventas`.`comprobante-pago` ;

CREATE TABLE IF NOT EXISTS `gestion-ventas`.`comprobante-pago` (
  `id-comprobante-pago` INT NOT NULL AUTO_INCREMENT,
  `referencial` VARCHAR(45) NULL,
  `numero-referencia` VARCHAR(45) NULL,
  `Ventas_id-Ventas` INT NOT NULL,
  PRIMARY KEY (`id-comprobante-pago`),
  INDEX `fk_comprobante-pago_Ventas1_idx` (`Ventas_id-Ventas` ASC) ,
  CONSTRAINT `fk_comprobante-pago_Ventas1`
    FOREIGN KEY (`Ventas_id-Ventas`)
    REFERENCES `gestion-ventas`.`Ventas` (`id-Ventas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gestion-ventas`.`administrador`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gestion-ventas`.`administrador` ;

CREATE TABLE IF NOT EXISTS `gestion-ventas`.`administrador` (
  `id-administrador` INT NOT NULL,
  `admin-user` VARCHAR(45) NULL,
  `admin-password` VARCHAR(45) NULL,
  `personas_id-personas` INT NOT NULL,
  PRIMARY KEY (`id-administrador`),
  INDEX `fk_administrador_personas1_idx` (`personas_id-personas` ASC) ,
  CONSTRAINT `fk_administrador_personas1`
    FOREIGN KEY (`personas_id-personas`)
    REFERENCES `gestion-ventas`.`personas` (`id-personas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gestion-ventas`.`Ventas_x_productos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gestion-ventas`.`Ventas_x_productos` ;

CREATE TABLE IF NOT EXISTS `gestion-ventas`.`Ventas_x_productos` (
  `id-Ventas_x_productos` INT NOT NULL AUTO_INCREMENT,
  `Ventas_id-Ventas` INT NOT NULL,
  `productos_id-productos` INT NOT NULL,
  INDEX `fk_Ventas_has_productos_productos1_idx` (`productos_id-productos` ASC) ,
  INDEX `fk_Ventas_has_productos_Ventas1_idx` (`Ventas_id-Ventas` ASC) ,
  PRIMARY KEY (`id-Ventas_x_productos`),
  CONSTRAINT `fk_Ventas_has_productos_Ventas1`
    FOREIGN KEY (`Ventas_id-Ventas`)
    REFERENCES `gestion-ventas`.`Ventas` (`id-Ventas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Ventas_has_productos_productos1`
    FOREIGN KEY (`productos_id-productos`)
    REFERENCES `gestion-ventas`.`productos` (`id-productos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
